from __future__ import print_function, unicode_literals

from aspen import Response
from gratipay.utils import get_participant

workflow = ['pending-application', 'pending-review', 'rejected', 'pending-payout', 'completed']
[-----------------------------------------------------------------------------]

request.allow('POST')
participant = get_participant(state, restrict=True)

if not user.ADMIN:
    raise Response(401)

new_status = request.body['to']

if new_status not in workflow:
    raise Response(400, "invalid value for 'to' parameter")

website.db.run("""
    UPDATE participants
       SET status_of_1_0_payout = %s
     WHERE id = %s
""", (new_status, participant.id))

website.redirect('settings', base_url='')

[---] text/html

