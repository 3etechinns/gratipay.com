from __future__ import print_function, unicode_literals

from aspen import Response
from gratipay.utils import get_participant
from gratipay.exceptions import ProblemChangingNumber

[-----------------------------------------------------------------------------]

request.allow("POST")
participant = get_participant(state, restrict=True)

number = request.body["number"]

if number not in ("singular", "plural"):
    raise Response(400)

out = {}

if number != participant.number:
    if number == "singular" and not request.body.get("confirmed") and participant.nmembers > 0:
        msg = _("Warning: Doing this will remove all the members from your team.\n\n"
                "You'll have to add them back manually to undo this!")
        out = {'confirm': msg}
    else:
        try:
            participant.update_number(number)
        except ProblemChangingNumber, e:
            raise Response(400, unicode(e))
        msg = _("Your account type has been changed.")
        out = {'number': number, 'msg': msg}


[---] application/json via json_dump
out
